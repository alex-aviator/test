# This is a basic workflow to help you get started with Actions

name: build

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      aviator_release_cut_id:
        description: "Database ID of release cut"
        required: false
        type: string
      aviator_release_cut_commit_hash:
        description: "Commit SHA, branch name, or tag of the HEAD to be built"
        required: false
        type: string
      aviator_release_candidate_version:
        description: "Name of the version"
        required: true
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Print the ref
        run: |
          echo "Current HEAD: $(git rev-parse HEAD)"
        
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          ref: "${{ inputs.aviator_release_cut_commit_hash }}"
          lfs: true
          submodules: 'recursive'

      # Runs a set of commands using the runners shell
      - name: Print the inputs
        run: |
          echo "Inputs:"
          echo "deployment_id=${{ inputs.aviator_release_cut_id }}"
          echo "commit_sha=${{ inputs.aviator_release_cut_commit_hash }}"
          echo "version=${{ inputs.aviator_release_candidate_version }}"
          
      - name: Sync IDs via Aviator API
        uses: fjogeleit/http-request-action@v1
        with:
          url: '${{ vars.ATC_DEMO_API_HOST }}/api/v1/sync-build-github-action'
          method: 'POST'
          bearerToken: ${{ secrets.ATC_DEMO_AVIATOR_API_TOKEN }}
          data: '{"release_cut_id": "${{ inputs.aviator_release_cut_id }}", "workflow_run_id": "${{ github.run_id }}"}'
          
      - name: Wait until canceled
        shell: bash
        run: |
          sleep 300
